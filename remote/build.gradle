apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.android.library'


android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def remoteDependencies = rootProject.ext.remoteDependencies
    def remoteTestDependencies = rootProject.ext.remoteTestDependencies

    implementation remoteDependencies.javaxAnnotation
    kapt 'com.google.auto.value:auto-value:1.5.2'
    implementation remoteDependencies.kotlin
    implementation remoteDependencies.javaxInject
    implementation remoteDependencies.rxKotlin
    implementation remoteDependencies.gson
    implementation remoteDependencies.okHttp
    implementation remoteDependencies.okHttpLogger
    implementation remoteDependencies.retrofit
    implementation remoteDependencies.retrofitConverter
    implementation remoteDependencies.retrofitAdapter

    testImplementation remoteTestDependencies.junit
    testImplementation remoteTestDependencies.kotlinJUnit
    testImplementation remoteTestDependencies.mockito
    testImplementation remoteTestDependencies.assertj

    implementation project(':data')
    implementation project(path: ':domain')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
